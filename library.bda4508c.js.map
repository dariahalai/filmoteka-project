{"mappings":"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","sources":["src/library.js","src/js/queue.js","src/js/watched.js","src/js/open-modal-library.js"],"sourcesContent":["import './js/modal-team';\nimport './js/btn-scroll';\nimport './js/watched';\nimport './js/queue';\nimport './js/local-storage-set';\n\nimport './js/open-modal-library';\n","import {\n  emptyRefs,\n  btnWatchedRefs,\n  IMG_PATH,\n  SMALL_SIZE,\n  galleryLibrary,\n} from './watched';\n\n// import { renderWatchedFilmCards } from './watched';\nimport { getGenre } from './modal-film.js';\n\nimport { IN_LIBRARY, renderPagination } from './pagination.js';\n\nexport const pagLibRef = document.querySelector('.js-pagination');\nexport const btnQueuedRefs = document.querySelector(\n  'button[data-action=\"queue\"]'\n);\n\nconst QUEUE_KEY = 'QueueMovies';\n\nwindow.addEventListener('load', () => onBtnQueueClick());\n\nbtnQueuedRefs.addEventListener('click', onBtnQueueClick);\n\nfunction onBtnQueueClick() {\n  btnQueuedRefs.classList.add('filter__button--active');\n  btnWatchedRefs.classList.remove('filter__button--active');\n  let page = 1;\n  // try {\n  //   let queueFilms = localStorage.getItem(QUEUE_KEY);\n  //   // let page = 0;\n  //   if (queueFilms) {\n  //     queueFilms = JSON.parse(queueFilms);\n\n  //     // queueFilms = chunkQueueFilms()[page];\n\n  //     renderWatchedFilmCards(queueFilms);\n\n  //     emptyRefs.classList.add('is-hidden');\n  //   }\n  // } catch (error) {\n  //   console.log(error);\n  // }\n  renderQueuedFilmCards(page);\n  emptyRefs.classList.add('is-hidden');\n  // Rendering pagination. Andrii\n  renderPagination();\n  return;\n}\n\nexport function renderQueuedFilmCards(page) {\n  let markup = chunkQueueFilms();\n  [page]\n    .map(({ id, poster_path, genre_ids, title, release_date }) => {\n      let genresStr = getGenre(genre_ids);\n      let year = release_date.substring(0, 4);\n      if (genresStr && year) genresStr += ' | ';\n      if (!title) title = 'no information';\n\n      let smallImg = !!poster_path\n        ? IMG_PATH + SMALL_SIZE + poster_path\n        : NO_IMAGE;\n\n      return `\n     <li class=\"film-card\">\n          <a href=\"#\" class=\"film-card__link\">\n           <img\n             class=\"film-card__film-img\"\n             src=\"${smallImg}\"\n             alt=\"${title}\"\n             id=\"${id}\"\n           />\n           <h3 class=\"film-card__film-name\">${title}</h3>\n           <p class=\"film-card__genre\">${genresStr}${year}</p>\n         </a>\n       </li>\n   `;\n    })\n    .join('');\n\n  galleryLibrary.innerHTML = markup;\n}\n\n// Функція ділить queue films на масиви, в кожному по 20 фільмів(обєктів)\n\nexport function chunkQueueFilms() {\n  // дільник, кількість фільмів на сторінці\n  const chunk = 20;\n  try {\n    let data = localStorage.getItem(QUEUE_KEY);\n    if (data) {\n      data = JSON.parse(data);\n      let i = 0;\n      const updateData = [];\n      while (i < data.length) {\n        updateData.push(data.slice(i, chunk + i));\n        i += chunk;\n      }\n      return updateData;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconsole.log(chunkQueueFilms());\n","import { btnQueuedRefs } from './queue.js';\nimport { getGenre } from './modal-film.js';\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/';\nexport const SMALL_SIZE = 'w500';\nconst WATCHED_KEY = 'WatchedMovies';\n\n\nexport const btnWatchedRefs = document.querySelector(\n  'button[data-action=\"watched\"]'\n);\nexport const emptyRefs = document.querySelector('[data-action=\"empty\"]');\nexport const galleryLibrary = document.querySelector(\n  '[data-action=\"list-library\"]'\n);\n\nbtnWatchedRefs.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnWatchedClick() {\n  btnQueuedRefs.classList.remove('filter__button--active');\n  btnWatchedRefs.classList.add('filter__button--active');\n  // try {\n    let page = 0;\n    // let watchedFilms = localStorage.getItem(WATCHED_KEY);\n    // if (watchedFilms) {\n    //   watchedFilms = JSON.parse(watchedFilms);\n    //   console.log(\"watchedFilms в ІФІ\", watchedFilms)\n\n      // watchedFilms = chunkWatchedFilms()[page];\n      renderWatchedFilmCards(page);\n\n      emptyRefs.classList.add('is-hidden');\n    // }\n  // } catch (error) {\n  //   console.log(error);\n  // }\n\n  return;\n}\n\nexport function renderWatchedFilmCards(page) { \n  \n  let markup = chunkWatchedFilms()[page]\n    .map(({ id, poster_path, genre_ids, title, release_date }) => {\n      let genresStr = getGenre(genre_ids);\n      let year = release_date.substring(0, 4);\n      if (genresStr && year) genresStr += ' | ';\n      if (!title) title = 'no information';\n\n      let smallImg = !!poster_path\n        ? IMG_PATH + SMALL_SIZE + poster_path\n        : NO_IMAGE;\n\n      return `\n      <li class=\"film-card\">\n         \t<a href=\"#\" class=\"film-card__link\">\n            <img\n              class=\"film-card__film-img\"\n              src=\"${smallImg}\"\n              alt=\"${title}\"\n              id=\"${id}\"\n            />\n            <h3 class=\"film-card__film-name\">${title}</h3>\n            <p class=\"film-card__genre\">${genresStr}${year}</p>\n          </a>\n        </li>\n\t\t`;\n    })\n    .join('');\n\n  galleryLibrary.innerHTML = markup;\n}\n\n\n// Функція ділить watched films на масиви, в кожному по 20 фільмів(обєктів)\n\nexport function chunkWatchedFilms() {\n  // дільник, кількість фільмів на сторінці\n  const chunk = 20;\n  try {\n    let data = localStorage.getItem(WATCHED_KEY);\n    if (data) {\n      data = JSON.parse(data);\n      let i = 0;\n      const updateData = [];\n      while (i < data.length) {\n        updateData.push(data.slice(i, chunk + i));\n        i += chunk;\n        \n      }\n      return updateData;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconsole.log(chunkWatchedFilms());\n","import * as storageLocal from './local-storage.js';\nimport ModalFilm from './modal-film.js';\n\nconst refs = {\n  gallery: document.querySelector('.js-gallery'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  activLibraryBtn: document.querySelector(\n    '.filter__item>.filter__button--active'\n  ),\n};\nconsole.log(refs.activLibraryBtn.textContent);\nconst modalFilm = new ModalFilm();\n\nrefs.gallery.addEventListener('click', onOpenModal);\nrefs.closeBtn.addEventListener('click', onCloseModal);\nwindow.addEventListener('keydown', onCloseModalEsc);\ndocument.addEventListener('click', onOverlayClose);\n\nfunction onOpenModal(e) {\n  e.preventDefault();\n\n  if (e.target.nodeName !== 'IMG') return;\n\n  const dataCurentFilm = getFilmData(e.target.id);\n\n  modalFilm.modifyDataFilm(dataCurentFilm);\n  modalFilm.open();\n\n  refs.closeBtn.addEventListener('click', onCloseModal);\n  window.addEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModal() {\n  modalFilm.close();\n\n  refs.closeBtn.removeEventListener('click', onCloseModal);\n  window.removeEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModalEsc(e) {\n  if (e.code === 'Escape') {\n    modalFilm.close();\n\n    refs.closeBtn.removeEventListener('click', onCloseModal);\n    window.removeEventListener('keydown', onCloseModalEsc);\n  }\n}\n\nfunction getFilmData(filmId) {\n  const filmList =\n    refs.activLibraryBtn.textContent === 'Queue'\n      ? storageLocal.load('QueueMovies')\n      : storageLocal.load('WatchedMovies');\n  return filmList.find(film => film.id === Number(filmId));\n}\n\nfunction onOverlayClose(e) {\n  e.preventDefault();\n\n  if (!e.target.closest('.modal') && e.target.closest('.backdrop')) {\n    onCloseModal();\n  }\n}\n"],"names":["parcelRequire","$e45a8be9cfe57eeb$export$2e233108b4c37bf0","document","querySelector","$e45a8be9cfe57eeb$var$onBtnQueueClick","classList","add","$a215baf1061f969f$export$8e7999df18b0696e","remove","page","markup","$e45a8be9cfe57eeb$export$d2bd2dd8372bd39c","map","param","id","poster_path","genre_ids","title","release_date","genresStr","$73ES2","getGenre","year","substring","smallImg","$a215baf1061f969f$export$927457973eb16419","$a215baf1061f969f$export$833b96fcc7d25997","NO_IMAGE","concat","join","$a215baf1061f969f$export$bcd4d5f228010f5d","innerHTML","$e45a8be9cfe57eeb$export$8c004c03bd78db81","$a215baf1061f969f$export$f345d6e579d6ff19","$jcFG7","renderPagination","data","localStorage","getItem","JSON","parse","i","updateData","length","push","slice","error","console","log","window","addEventListener","$a215baf1061f969f$export$401b80ce059b5fae","$a215baf1061f969f$export$1e847d4efb28c937","$4LMMA","$572566355069554e$var$refs","gallery","closeBtn","activLibraryBtn","textContent","$572566355069554e$var$modalFilm","default","$572566355069554e$var$onCloseModal","close","removeEventListener","$572566355069554e$var$onCloseModalEsc","e","code","preventDefault","target","nodeName","dataCurentFilm","filmId","load","find","film","Number","modifyDataFilm","open","closest"],"version":3,"file":"library.bda4508c.js.map"}