{"mappings":"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","sources":["src/js/trailer.js","src/index.js","src/js/open-model.js"],"sourcesContent":["import { getMovieTrailer } from './popular';\n\nexport const trailerButtonRef = document.getElementById('trailer');\nconst trailerErrorContainer = document.getElementById('trailer-error');\nconst spinner = document.querySelector('.spinner');\n\nif (!trailerButtonRef) {\n  return;\n}\n\nexport const handleBackButtonClick = (iframeContainer, trailerContainer) => {\n  trailerContainer.classList.remove('display-none');\n  trailerErrorContainer.innerHTML = '';\n  if (iframeContainer) {\n    iframeContainer.remove();\n  }\n};\n\nconst renderYoutubeIframe = movieKey => {\n  const iframe = document.createElement('iframe');\n  iframe.src = `https://www.youtube.com/embed/${movieKey}`;\n  iframe.frameBorder = '0';\n  iframe.allowFullscreen = true;\n  const trailerContainer = document.querySelector('.film__info-wrapper');\n  trailerContainer.classList.add('display-none');\n  const iframeContainer = document.createElement('div');\n  iframeContainer.classList.add('iframe-container');\n  iframeContainer.setHTML(\n    '<button class=\"back-button\" id=\"back-to-modal\">BACK</button>'\n  );\n  trailerContainer.after(iframeContainer);\n  const backButton = document.getElementById('back-to-modal');\n  backButton.addEventListener('click', () => {\n    handleBackButtonClick(iframeContainer, trailerContainer);\n    backButton.removeEventListener('click', handleBackButtonClick);\n  });\n  iframeContainer.appendChild(iframe);\n};\n\nexport const handleTrailerButtonClick = () => {\n  spinner.classList.remove('is-hidden');\n  const movieId = trailerButtonRef.getAttribute('data-movie-id');\n  getMovieTrailer(movieId)\n    .then(data => {\n      const results = data.results;\n      if (!results.length) {\n        throw new Error('Trailer is not available');\n      }\n      renderYoutubeIframe(results[0].key);\n    })\n    .catch(e => {\n      trailerErrorContainer.innerText = e.message;\n    })\n    .finally(() => {\n      spinner.classList.add('is-hidden');\n    });\n};\n\ntrailerButtonRef.addEventListener('click', handleTrailerButtonClick);\n","import './js/pagination';\nimport './js/popular';\nimport './js/film-search';\nimport './js/open-model';\nimport './js/trailer';\nimport './js/modal-team';\nimport './js/btn-scroll';\n\n\n","import * as storageLocal from './local-storage.js';\nimport ModalFilm from './modal-film';\nimport { handleBackButtonClick, trailerButtonRef,  handleTrailerButtonClick} from './trailer';\n\nimport { sendWatchedToStorage, sendQueueToStorage } from \"./local-storage-set\";\n\nconst refs = {\n  gallery: document.querySelector('.js-gallery'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  btnWatched: document.querySelector(\".btn_watched\"),\n  btnQueue: document.querySelector(\".btn_queue\"),\n};\n\nconst modalFilm = new ModalFilm();\n\nrefs.gallery.addEventListener('click', onOpenModal);\nrefs.closeBtn.addEventListener('click', onCloseModal);\nwindow.addEventListener('keydown', onCloseModalEsc);  \n\nfunction onOverlayClose(event) {\n  if (!event.target.closest(\".modal\") && event.target.closest('.backdrop')) {\n      onCloseModal();\n  }\n}\ndocument.addEventListener(\"click\", onOverlayClose)\n\nfunction onOpenModal(e) {\n  e.preventDefault();\n  trailerButtonRef.addEventListener('click', handleTrailerButtonClick);\n\n  if (e.target.nodeName !== 'IMG') return;\n\n  const dataCurentFilm = getFilmData(e.target.id);\n\n  modalFilm.modifyDataFilm(dataCurentFilm);\n  modalFilm.open();\n\n///// for local-storage and button /////////\n  checkWatchedStorage(dataCurentFilm)\n  if (refs.btnWatched.classList.contains(\"watched_remove\")) {\n      refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n  } \n\n  checkQueueStorage(dataCurentFilm)\n  if (refs.btnQueue.classList.contains(\"queue_remove\")) {\n      refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n  } \n  \n  refs.btnWatched.addEventListener(\"click\", onWatchedBtnClick)\n  refs.btnQueue.addEventListener(\"click\", onQueueBtnClick)\n    \n  \n  function onWatchedBtnClick() {\n    // connst filmData = dataCurentFilm\n    if (refs.btnWatched.classList.contains(\"watched_send\")) {\n      refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n      refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n\n      sendWatchedToStorage(dataCurentFilm)\n    } else if (refs.btnWatched.classList.contains(\"watched_remove\")) {\n      refs.btnWatched.textContent = 'ADD TO WATCHED'  \n      refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n\n      removeWatchedFilm(dataCurentFilm)\n    } \n  }\n \n  function removeWatchedFilm(currentFilm) {\n      try {\n        const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n        const getWatchedArray = JSON.parse(getWatchedFromStorage)\n\n        const watchedFilmIndex = getWatchedArray.findIndex(value => value.id === currentFilm.id);\n        getWatchedArray.splice(watchedFilmIndex, 1)\n        localStorage.setItem(\"WatchedMovies\", JSON.stringify(getWatchedArray))\n        \n        refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n}\n  \n  function onQueueBtnClick() {\n    if (refs.btnQueue.classList.contains(\"queue_send\")) {\n      refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n      refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n\n      sendQueueToStorage(dataCurentFilm)\n    } else if (refs.btnQueue.classList.contains(\"queue_remove\")) {\n      refs.btnQueue.textContent = 'ADD TO QUEUE'  \n      refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n\n      removeQueueFilm(dataCurentFilm)\n    } \n  }\n\n  function removeQueueFilm(currentFilm) {\n      try {\n        const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n        const getQueueArray = JSON.parse(getQueueFromStorage)\n\n        const QueueFilmIndex = getQueueArray.findIndex(value => value.id === currentFilm.id);\n        getQueueArray.splice(QueueFilmIndex, 1)\n        localStorage.setItem(\"QueueMovies\", JSON.stringify(getQueueArray))\n        \n        refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n}\n///////////////////end of local-storage ///////////\n\n  refs.closeBtn.addEventListener('click', onCloseModal);\n  window.addEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModal() {\n  const iframeContainer = document.querySelector('.iframe-container');\n  const trailerContainer = document.querySelector('.film__info-wrapper');\n  handleBackButtonClick(iframeContainer, trailerContainer);\n  modalFilm.close();\n  refs.closeBtn.removeEventListener('click', onCloseModal);\n  trailerButtonRef.removeEventListener('click', handleTrailerButtonClick);\n  window.removeEventListener('keydown', onCloseModalEsc);\n\n    ////////////////////\n  // refs.btnWatched.removeEventListener(\"click\", onWatchedBtnClick)\n  // refs.btnQueue.removeEventListener(\"click\", onQueueBtnClick)\n\n\n  //////////Примусове перезавантаження сторінки /////////////////////////////////\n  // window.location.reload()\n}\n\nfunction onCloseModalEsc(e) {\n  if (e.code === 'Escape') {\n    modalFilm.close();\n\n    refs.closeBtn.removeEventListener('click', onCloseModal);\n    window.removeEventListener('keydown', onCloseModalEsc);\n  }\n}\n\nfunction getFilmData(filmId) {\n  const filmList = storageLocal.load('film-current-page');\n  return filmList.find(film => film.id === Number(filmId));\n}\n\n////////////// checks for button /////////////////\n\nfunction checkWatchedStorage(currentFilm) {\n  try {\n    const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n    const getWatchedArray = JSON.parse(getWatchedFromStorage)\n    const checkWatchedStorage = getWatchedArray.find(option => option.id === currentFilm.id);\n        if (checkWatchedStorage) {\n          refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n        } else {\n          refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n        }\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n      refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n    }\n}\n\nfunction checkQueueStorage(currentFilm) {\n  try {\n    const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n    const getQueueArray = JSON.parse(getQueueFromStorage)\n    const checkQueueStorage = getQueueArray.find(option => option.id === currentFilm.id);\n        if (checkQueueStorage) {\n          refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n        } else {\n          refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n        }\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n      refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n    }\n}\n"],"names":["$cLaDu","parcelRequire","trailerButtonRef","document","getElementById","trailerErrorContainer","spinner","querySelector","handleBackButtonClick","iframeContainer","trailerContainer","classList","remove","innerHTML","handleTrailerButtonClick","movieId","getAttribute","getMovieTrailer","then","data","results","length","Error","movieKey","iframe","createElement","src","concat","frameBorder","allowFullscreen","add","setHTML","after","backButton","addEventListener","removeEventListener","appendChild","renderYoutubeIframe","key","catch","e","innerText","message","finally","$4LMMA","$fb09461e5f4fdf78$var$refs","gallery","closeBtn","btnWatched","btnQueue","$fb09461e5f4fdf78$var$modalFilm","$73ES2","default","$fb09461e5f4fdf78$var$onCloseModal","$cDXQO","close","window","$fb09461e5f4fdf78$var$onCloseModalEsc","code","preventDefault","target","nodeName","dataCurentFilm","filmId","id","load","find","film","Number","modifyDataFilm","open","currentFilm","getWatchedFromStorage","localStorage","getItem","JSON","parse","option","replace","error","console","$fb09461e5f4fdf78$var$checkWatchedStorage","contains","textContent","getQueueFromStorage","$fb09461e5f4fdf78$var$checkQueueStorage","$iDjs5","sendWatchedToStorage","getWatchedArray","watchedFilmIndex","findIndex","value","splice","setItem","stringify","removeWatchedFilm","sendQueueToStorage","getQueueArray","QueueFilmIndex","removeQueueFilm","event","closest"],"version":3,"file":"index.b7b30bdc.js.map"}