{"mappings":"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","sources":["src/library.js","src/js/queue.js","src/js/watched.js","src/js/open-modal-library.js"],"sourcesContent":["import './js/modal-team';\nimport './js/btn-scroll';\nimport './js/watched';\nimport './js/queue';\nimport './js/local-storage-set';\nimport './js/trailer';\nimport './js/open-modal-library';\n","import {\n  emptyRefs,\n  btnWatchedRefs,\n} from './watched';\n\nimport { renderWatchedFilmCards } from './watched';\n\n\nexport const btnQueuedRefs = document.querySelector(\n  'button[data-action=\"queue\"]'\n);\n\n// const QUEUE_KEY = 'QueueMovies';\n\nwindow.addEventListener('load', () => onBtnQueueClick());\n\nbtnQueuedRefs.addEventListener('click', onBtnQueueClick);\n\nexport function onBtnQueueClick() {\n  btnQueuedRefs.classList.add('filter__button--active');\n  btnWatchedRefs.classList.remove('filter__button--active');\n  try {\n    let queueFilms = localStorage.getItem('QueueMovies');\n    if (queueFilms) {\n      queueFilms = JSON.parse(queueFilms);\n      renderWatchedFilmCards(queueFilms);\n      emptyRefs.classList.add('is-hidden');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return;\n}\n","import { btnQueuedRefs } from './queue.js';\nimport { getGenre } from './modal-film.js';\n\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/';\nexport const SMALL_SIZE = 'w500';\n// const WATCHED_KEY = 'WatchedMovies';\n\n\nexport const btnWatchedRefs = document.querySelector(\n  'button[data-action=\"watched\"]'\n);\nexport const emptyRefs = document.querySelector('[data-action=\"empty\"]');\nexport const galleryLibrary = document.querySelector(\n  '[data-action=\"list-library\"]'\n);\n\nbtnWatchedRefs.addEventListener('click', onBtnWatchedClick);\n\nexport function onBtnWatchedClick() {\n  btnQueuedRefs.classList.remove('filter__button--active');\n  btnWatchedRefs.classList.add('filter__button--active');\n  try {\n    let watchedFilms = localStorage.getItem('WatchedMovies');\n    if (watchedFilms) {\n      watchedFilms = JSON.parse(watchedFilms);\n      renderWatchedFilmCards(watchedFilms);\n\n      emptyRefs.classList.add('is-hidden');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return;\n}\n\n\nexport function renderWatchedFilmCards(data) {\n  const markup = data\n    .map(({ id, poster_path, genre_ids, title, release_date }) => {\n      let genresStr = getGenre(genre_ids);\n      let year = release_date.substring(0, 4);\n      if (genresStr && year) genresStr += ' | ';\n      if (!title) title = 'no information';\n\n      let smallImg = !!poster_path\n        ? IMG_PATH + SMALL_SIZE + poster_path\n        : NO_IMAGE;\n      return `\n      <li class=\"film-card\">\n         \t<a href=\"#\" class=\"film-card__link\">\n            <img\n              class=\"film-card__film-img\"\n              src=\"${smallImg}\"\n              alt=\"${title}\"\n              id=\"${id}\"\n            />\n            <h3 class=\"film-card__film-name\">${title}</h3>\n            <p class=\"film-card__genre\">${genresStr}${year}</p>\n          </a>\n        </li>\n\t\t`;\n    })\n    .join('');\n\n  galleryLibrary.innerHTML = markup;\n}\n","import * as storageLocal from './local-storage.js';\nimport ModalFilm from './modal-film.js';\nimport { sendWatchedToStorage, sendQueueToStorage} from \"./local-storage-set\";\nimport {onBtnQueueClick} from './queue.js';\nimport {onBtnWatchedClick} from './watched.js';\nconst refs = {\n  gallery: document.querySelector('.js-gallery'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  btnWatched: document.querySelector(\".btn_watched\"),\n  btnQueue: document.querySelector(\".btn_queue\"),\n  activLibraryBtn: document.querySelector(\n    '.filter__item>.filter__button--active'\n  ),\n};\n// console.log(refs.activLibraryBtn.textContent);\nconst modalFilm = new ModalFilm();\n\nrefs.gallery.addEventListener('click', onOpenModal);\nrefs.closeBtn.addEventListener('click', onCloseModal);\nwindow.addEventListener('keydown', onCloseModalEsc);\ndocument.addEventListener('click', onOverlayClose);\n\nfunction onOpenModal(e) {\n  e.preventDefault();\n\n  if (e.target.nodeName !== 'IMG') return;\n\n  const dataCurentFilm = getFilmData(e.target.id);\n\n  modalFilm.modifyDataFilm(dataCurentFilm);\n  modalFilm.open();\n\n///// for local-storage and button /////////\nrefs.btnWatched.addEventListener(\"click\", onWatchedBtnClick)\nrefs.btnQueue.addEventListener(\"click\", onQueueBtnClick)\n\nlocalStorage.setItem(\"CurrentFilm\", JSON.stringify(dataCurentFilm))\n\ncheckWatchedStorage(dataCurentFilm)\nif (refs.btnWatched.classList.contains(\"watched_remove\")) {\n  refs.btnWatched.textContent = 'REMOVE FROM WATCHED'} \nelse if(refs.btnWatched.classList.contains(\"watched_send\")){\n  refs.btnWatched.textContent = 'ADD TO WATCHED'\n}\n\ncheckQueueStorage(dataCurentFilm)\nif (refs.btnQueue.classList.contains(\"queue_remove\")) {\n    refs.btnQueue.textContent = 'REMOVE FROM QUEUE'}\nelse if (refs.btnWatched.classList.contains(\"queue_send\")){\n  refs.btnQueue.textContent = 'ADD TO QUEUE'\n}\n  \nfunction onWatchedBtnClick() {\n  if (refs.btnWatched.classList.contains(\"watched_send\")) {\n    refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n    refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n\n    sendWatchedToStorage()\n\n  } else if (refs.btnWatched.classList.contains(\"watched_remove\")) {\n    refs.btnWatched.textContent = 'ADD TO WATCHED'  \n    refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n\n    removeWatchedFilm(dataCurentFilm)\n  }\n    \n  refs.btnWatched.textContent = 'ADD TO WATCHED' \n  refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")  \n}\n\nfunction removeWatchedFilm(currentFilm) {\n    try {\n      const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n      const getWatchedArray = JSON.parse(getWatchedFromStorage)\n\n      const watchedFilmIndex = getWatchedArray.findIndex(value => value.id === currentFilm.id);\n      getWatchedArray.splice(watchedFilmIndex, 1)\n      localStorage.setItem(\"WatchedMovies\", JSON.stringify(getWatchedArray))\n    } catch (error) {\n    // console.error('Get state error: ', error.message);\n  }\n}\n\nfunction onQueueBtnClick() {\n  if (refs.btnQueue.classList.contains(\"queue_send\")) {\n    refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n    refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n\n    sendQueueToStorage()\n  } else if (refs.btnQueue.classList.contains(\"queue_remove\")) {\n    refs.btnQueue.textContent = 'ADD TO QUEUE'  \n    refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n\n    removeQueueFilm(dataCurentFilm)\n  }\n\n  refs.btnQueue.textContent = 'ADD TO QUEUE'  \n  refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n}\n\nfunction removeQueueFilm(currentFilm) {\n    try {\n      const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n      const getQueueArray = JSON.parse(getQueueFromStorage)\n\n      const queueFilmIndex = getQueueArray.findIndex(value => value.id === currentFilm.id);\n      getQueueArray.splice(queueFilmIndex, 1)\n      localStorage.setItem(\"QueueMovies\", JSON.stringify(getQueueArray))\n\n  } catch (error) {\n    // console.error('Get state error: ', error.message);\n  }\n}\n///////////////////end of local-storage ///////////\n\n  refs.closeBtn.addEventListener('click', onCloseModal);\n  window.addEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModal() {\n  modalFilm.close();\n\n  refs.closeBtn.removeEventListener('click', onCloseModal);\n  window.removeEventListener('keydown', onCloseModalEsc);\n\n    window.location.reload()\n}\n\nfunction onCloseModalEsc(e) {\n  if (e.code === 'Escape') {\n    modalFilm.close();\n\n    refs.closeBtn.removeEventListener('click', onCloseModal);\n    window.removeEventListener('keydown', onCloseModalEsc);\n  }\n}\n\nfunction getFilmData(filmId) {\n  const filmList = storageLocal.load('QueueMovies').concat(storageLocal.load('WatchedMovies'));\n  return filmList.find(film => film.id === Number(filmId));\n}\n\nfunction onOverlayClose(e) {\n  // e.preventDefault();\n\n  if (!e.target.closest('.modal') && e.target.closest('.backdrop')) {\n    onCloseModal();\n  }\n}\n///////////// checks for button /////////////////\n\nfunction checkWatchedStorage(currentFilm) {\n  try {\n    const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n    const getWatchedArray = JSON.parse(getWatchedFromStorage)\n    const checkWatchedStorage = getWatchedArray.find(option => option.id === currentFilm.id);\n        if (checkWatchedStorage) {\n          refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n          refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n        } else {\n          refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n          refs.btnWatched.textContent = 'ADD TO WATCHED'\n        }\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n      refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n    }\n}\n\nfunction checkQueueStorage(currentFilm) {\n  try {\n    const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n    const getQueueArray = JSON.parse(getQueueFromStorage)\n    const checkQueueStorage = getQueueArray.find(option => option.id === currentFilm.id);\n        if (checkQueueStorage) {\n          refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n          refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n        } else {\n          refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n          refs.btnQueue.textContent = 'ADD TO QUEUE'\n   \n\n        }\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n      refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n    }\n}"],"names":["parcelRequire","$a595e1401ec493e7$export$2e233108b4c37bf0","document","querySelector","$a595e1401ec493e7$export$b055216bf7aaa057","classList","add","$7126a8cfa5cf9b17$export$8e7999df18b0696e","remove","queueFilms","localStorage","getItem","JSON","parse","$7126a8cfa5cf9b17$export$1e847d4efb28c937","$7126a8cfa5cf9b17$export$f345d6e579d6ff19","error","console","log","window","addEventListener","$7126a8cfa5cf9b17$export$bcd4d5f228010f5d","data","markup","map","id","poster_path","genre_ids","title","release_date","genresStr","$fQE3M","getGenre","year","substring","$7126a8cfa5cf9b17$export$927457973eb16419","NO_IMAGE","join","innerHTML","watchedFilms","$b5rV1","$52d45de5747c39fe$var$refs","gallery","closeBtn","btnWatched","btnQueue","activLibraryBtn","$52d45de5747c39fe$var$modalFilm","default","$52d45de5747c39fe$var$onCloseModal","close","removeEventListener","$52d45de5747c39fe$var$onCloseModalEsc","location","reload","e","code","preventDefault","target","nodeName","dataCurentFilm","filmId","load","concat","find","film","Number","modifyDataFilm","open","contains","textContent","replace","$9dykO","sendWatchedToStorage","currentFilm","getWatchedFromStorage","getWatchedArray","watchedFilmIndex","findIndex","value","splice","setItem","stringify","removeWatchedFilm","sendQueueToStorage","getQueueFromStorage","getQueueArray","queueFilmIndex","removeQueueFilm","option","$52d45de5747c39fe$var$checkWatchedStorage","$52d45de5747c39fe$var$checkQueueStorage","closest"],"version":3,"file":"library.8074cdca.js.map"}