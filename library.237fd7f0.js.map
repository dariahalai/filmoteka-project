{"mappings":"gfAEAA,EAAA,S,4BCGaC,EAAgBC,SAASC,cACpC,+BAUF,SAASC,IAEPH,EAAcI,UAAUC,IAAI,0BAC5BC,EAAeF,UAAUG,OAAO,2BAuB3B,SAA+BC,GAEpCC,OAASC,IAAkBF,GACzBG,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAASH,EAATG,UAAWC,EAAKJ,EAALI,MAAOC,EAAYL,EAAZK,aACrCC,GAAY,EAAAC,EAAAC,UAASL,GACrBM,EAAOJ,EAAaK,UAAU,EAAG,GACjCJ,GAAaG,IAAMH,GAAa,OAC/BF,IAAOA,EAAQ,kBAEpB,IAAIO,EAAaT,EACbU,EAAWC,EAAaX,EACxBY,SAEJ,MAAO,+JAMQC,OADAJ,EAAS,yBAEVI,OADCX,EAAM,wBAGoBW,OAF3Bd,EAAG,kEAGmBc,OADKX,EAAM,kDACCW,OAAZT,GAAiBS,OAALN,EAAK,yC,IAKtDO,KAAK,IAERC,EAAeC,UAAYrB,M,CApC1BsB,CAhBW,GAiBXC,EAAU5B,UAAUC,IAAI,Y,CAwCnB,SAASK,IAGd,IACE,IAAIuB,EAAOC,aAAaC,QAvEV,eAwEd,GAAIF,EAAM,CACRA,EAAOG,KAAKC,MAAMJ,GAGlB,IAFA,IAAIK,EAAI,EACFC,EAAa,GACZD,EAAIL,EAAKO,QACdD,EAAWE,KAAKR,EAAKS,MAAMJ,EARnB,GAQ8BA,IACtCA,GATQ,GAWV,OAAOC,C,EAET,MAAOI,GACPC,QAAQC,IAAIF,E,EAjFhBG,OAAOC,iBAAiB,QAAQ,W,OAAM5C,G,IAEtCH,EAAc+C,iBAAiB,QAAS5C,GAmFxCyC,QAAQC,IAAInC,K,iBC9FCc,EAAW,8BACXC,EAAa,OAIbnB,EAAiBL,SAASC,cACrC,iCAEW8B,EAAY/B,SAASC,cAAc,yBACnC2B,EAAiB5B,SAASC,cACrC,gCA+DK,SAAS8C,IAGd,IACE,IAAIf,EAAOC,aAAaC,QA3ER,iBA4EhB,GAAIF,EAAM,CACRA,EAAOG,KAAKC,MAAMJ,GAGlB,IAFA,IAAIK,EAAI,EACFC,EAAa,GACZD,EAAIL,EAAKO,QACdD,EAAWE,KAAKR,EAAKS,MAAMJ,EARnB,GAQ8BA,IACtCA,GATQ,GAYV,OAAOC,C,EAET,MAAOI,GACPC,QAAQC,IAAIF,E,EA7EhBrC,EAAeyC,iBAAiB,SAEhC,WACE/C,EAAcI,UAAUG,OAAO,0BAC/BD,EAAeF,UAAUC,IAAI,0BAiB7B,OAGK,SAAgCG,GAEpCC,OAASuC,IAAoBxC,GAC3BG,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAASH,EAATG,UAAWC,EAAKJ,EAALI,MAAOC,EAAYL,EAAZK,aACrCC,GAAY,EAAAC,EAAAC,UAASL,GACrBM,EAAOJ,EAAaK,UAAU,EAAG,GACjCJ,GAAaG,IAAMH,GAAa,OAC/BF,IAAOA,EAAQ,kBAEpB,IAAIO,EAAaT,EACbU,EAAWC,EAAaX,EACxBY,SAEJ,MAAO,oKAMQC,OADAJ,EAAS,0BAEVI,OADCX,EAAM,yBAGoBW,OAF3Bd,EAAG,oEAGmBc,OADKX,EAAM,mDACCW,OAAZT,GAAiBS,OAALN,EAAK,4C,IAKtDO,KAAK,IAERC,EAAeC,UAAYrB,M,CAzCvBwC,CAPS,QASTjB,EAAU5B,UAAUC,IAAI,Y,IAkE9BuC,QAAQC,IAAIG,K","sources":["src/library.js","src/js/queue.js","src/js/watched.js"],"sourcesContent":["\n\nimport './js/modal-team';\nimport './js/btn-scroll';\nimport './js/watched';\nimport './js/queue';\nimport \"./js/local-storage-set\";\n// import './js/open-model';","import { emptyRefs, btnWatchedRefs, IMG_PATH, SMALL_SIZE, galleryLibrary } from './watched';\n\n// import { renderWatchedFilmCards } from './watched';\nimport { getGenre } from './modal-film.js';\n\nexport const btnQueuedRefs = document.querySelector(\n  'button[data-action=\"queue\"]'\n);\n\n\nconst QUEUE_KEY = 'QueueMovies';\n\nwindow.addEventListener('load', () => onBtnQueueClick());\n\nbtnQueuedRefs.addEventListener('click', onBtnQueueClick);\n\nfunction onBtnQueueClick() {\n  \n  btnQueuedRefs.classList.add('filter__button--active');\n  btnWatchedRefs.classList.remove('filter__button--active');\n  let page = 0;\n  // try {\n  //   let queueFilms = localStorage.getItem(QUEUE_KEY);\n  //   // let page = 0;\n  //   if (queueFilms) {\n  //     queueFilms = JSON.parse(queueFilms);\n\n  //     // queueFilms = chunkQueueFilms()[page];\n\n  //     renderWatchedFilmCards(queueFilms);\n\n  //     emptyRefs.classList.add('is-hidden');\n  //   }\n  // } catch (error) {\n  //   console.log(error);\n  // }\n  renderQueuedFilmCards(page)\n  emptyRefs.classList.add('is-hidden');\n  return;\n}\n\n\nexport function renderQueuedFilmCards(page) { \n  \n  markup = chunkQueueFilms()[page]\n   .map(({ id, poster_path, genre_ids, title, release_date }) => {\n     let genresStr = getGenre(genre_ids);\n     let year = release_date.substring(0, 4);\n     if (genresStr && year) genresStr += ' | ';\n     if (!title) title = 'no information';\n\n     let smallImg = !!poster_path\n       ? IMG_PATH + SMALL_SIZE + poster_path\n       : NO_IMAGE;\n\n     return `\n     <li class=\"film-card\">\n          <a href=\"#\" class=\"film-card__link\">\n           <img\n             class=\"film-card__film-img\"\n             src=\"${smallImg}\"\n             alt=\"${title}\"\n             id=\"${id}\"\n           />\n           <h3 class=\"film-card__film-name\">${title}</h3>\n           <p class=\"film-card__genre\">${genresStr}${year}</p>\n         </a>\n       </li>\n   `;\n   })\n   .join('');\n\n galleryLibrary.innerHTML = markup;\n}\n\n// Функція ділить queue films на масиви, в кожному по 20 фільмів(обєктів)\n\nexport function chunkQueueFilms() {\n  // дільник, кількість фільмів на сторінці\n  const chunk = 20;\n  try {\n    let data = localStorage.getItem(QUEUE_KEY);\n    if (data) {\n      data = JSON.parse(data);\n      let i = 0;\n      const updateData = [];\n      while (i < data.length) {\n        updateData.push(data.slice(i, chunk + i));\n        i += chunk;        \n      }\n      return updateData;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconsole.log(chunkQueueFilms());\n\n","import { btnQueuedRefs } from './queue.js';\nimport { getGenre } from './modal-film.js';\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/';\nexport const SMALL_SIZE = 'w500';\nconst WATCHED_KEY = 'WatchedMovies';\n\n\nexport const btnWatchedRefs = document.querySelector(\n  'button[data-action=\"watched\"]'\n);\nexport const emptyRefs = document.querySelector('[data-action=\"empty\"]');\nexport const galleryLibrary = document.querySelector(\n  '[data-action=\"list-library\"]'\n);\n\nbtnWatchedRefs.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnWatchedClick() {\n  btnQueuedRefs.classList.remove('filter__button--active');\n  btnWatchedRefs.classList.add('filter__button--active');\n  // try {\n    let page = 0;\n    // let watchedFilms = localStorage.getItem(WATCHED_KEY);\n    // if (watchedFilms) {\n    //   watchedFilms = JSON.parse(watchedFilms);\n    //   console.log(\"watchedFilms в ІФІ\", watchedFilms)\n\n      // watchedFilms = chunkWatchedFilms()[page];\n      renderWatchedFilmCards(page);\n\n      emptyRefs.classList.add('is-hidden');\n    // }\n  // } catch (error) {\n  //   console.log(error);\n  // }\n\n  return;\n}\n\nexport function renderWatchedFilmCards(page) { \n  \n   markup = chunkWatchedFilms()[page]\n    .map(({ id, poster_path, genre_ids, title, release_date }) => {\n      let genresStr = getGenre(genre_ids);\n      let year = release_date.substring(0, 4);\n      if (genresStr && year) genresStr += ' | ';\n      if (!title) title = 'no information';\n\n      let smallImg = !!poster_path\n        ? IMG_PATH + SMALL_SIZE + poster_path\n        : NO_IMAGE;\n\n      return `\n      <li class=\"film-card\">\n         \t<a href=\"#\" class=\"film-card__link\">\n            <img\n              class=\"film-card__film-img\"\n              src=\"${smallImg}\"\n              alt=\"${title}\"\n              id=\"${id}\"\n            />\n            <h3 class=\"film-card__film-name\">${title}</h3>\n            <p class=\"film-card__genre\">${genresStr}${year}</p>\n          </a>\n        </li>\n\t\t`;\n    })\n    .join('');\n\n  galleryLibrary.innerHTML = markup;\n}\n\n\n// Функція ділить watched films на масиви, в кожному по 20 фільмів(обєктів)\n\nexport function chunkWatchedFilms() {\n  // дільник, кількість фільмів на сторінці\n  const chunk = 20;\n  try {\n    let data = localStorage.getItem(WATCHED_KEY);\n    if (data) {\n      data = JSON.parse(data);\n      let i = 0;\n      const updateData = [];\n      while (i < data.length) {\n        updateData.push(data.slice(i, chunk + i));\n        i += chunk;\n        \n      }\n      return updateData;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconsole.log(chunkWatchedFilms());\n"],"names":["parcelRequire","$e45a8be9cfe57eeb$export$2e233108b4c37bf0","document","querySelector","$e45a8be9cfe57eeb$var$onBtnQueueClick","classList","add","$a215baf1061f969f$export$8e7999df18b0696e","remove","page","markup","$e45a8be9cfe57eeb$export$d2bd2dd8372bd39c","map","param","id","poster_path","genre_ids","title","release_date","genresStr","$73ES2","getGenre","year","substring","smallImg","$a215baf1061f969f$export$927457973eb16419","$a215baf1061f969f$export$833b96fcc7d25997","NO_IMAGE","concat","join","$a215baf1061f969f$export$bcd4d5f228010f5d","innerHTML","$e45a8be9cfe57eeb$export$8c004c03bd78db81","$a215baf1061f969f$export$f345d6e579d6ff19","data","localStorage","getItem","JSON","parse","i","updateData","length","push","slice","error","console","log","window","addEventListener","$a215baf1061f969f$export$401b80ce059b5fae","$a215baf1061f969f$export$1e847d4efb28c937"],"version":3,"file":"library.237fd7f0.js.map"}