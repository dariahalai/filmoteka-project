{"mappings":"gfAAAA,EAAA,S,WCQO,IAAMC,EAAgBC,SAASC,cACpC,+BASF,SAASC,IACPH,EAAcI,UAAUC,IAAI,0BAC5BC,EAAeF,UAAUG,OAAO,0BAChC,IACE,IAAIC,EAAaC,aAAaC,QAAQ,eAClCF,IAEFG,EADAH,EAAaI,KAAKC,MAAML,IAExBM,EAAUV,UAAUC,IAAI,a,CAE1B,MAAOU,GACPC,QAAQC,IAAIF,E,EAfhBG,OAAOC,iBAAiB,QAAQ,W,OAAMhB,G,IAEtCH,EAAcmB,iBAAiB,QAAShB,G,iBCR3BG,EAAiBL,SAASC,cACrC,iCAEWY,EAAYb,SAASC,cAAc,yBACnCkB,EAAiBnB,SAASC,cACrC,gCAuBK,SAASS,EAAuBU,GACrC,IAAMC,EAASD,EACZE,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAASH,EAATG,UAAWC,EAAKJ,EAALI,MAAOC,EAAYL,EAAZK,aACrCC,GAAY,EAAAC,EAAAC,UAASL,GACrBM,EAAOJ,EAAaK,UAAU,EAAG,GACjCJ,GAAaG,IAAMH,GAAa,OAC/BF,IAAOA,EAAQ,kBAEpB,IAAIO,EAAaT,EACbU,kCAAwBV,EACxBW,SACJ,MAAO,oKAMQC,OADAH,EAAS,0BAEVG,OADCV,EAAM,yBAGoBU,OAF3Bb,EAAG,oEAGmBa,OADKV,EAAM,mDACCU,OAAZR,GAAiBQ,OAALL,EAAK,4C,IAKtDM,KAAK,IAERnB,EAAeoB,UAAYlB,C,CAhD7BhB,EAAea,iBAAiB,SAEhC,WACEnB,EAAcI,UAAUG,OAAO,0BAC/BD,EAAeF,UAAUC,IAAI,0BAC7B,IACE,IAAIoC,EAAehC,aAAaC,QAAQ,iBACpC+B,IAEF9B,EADA8B,EAAe7B,KAAKC,MAAM4B,IAG1B3B,EAAUV,UAAUC,IAAI,a,CAE1B,MAAOU,GACPC,QAAQC,IAAIF,E,CAEd,M,eChCF,IAAA2B,EAAA3C,EAAA,SAGM4C,G,aAAO,CACXC,QAAS3C,SAASC,cAAc,eAChC2C,SAAU5C,SAASC,cAAc,sBACjC4C,gBAAiB7C,SAASC,cACxB,2CAIE6C,EAAY,IAAI,EAAAhB,EAAAiB,SAqBtB,SAASC,IACPF,EAAUG,QAEVP,EAAKE,SAASM,oBAAoB,QAASF,GAC3C/B,OAAOiC,oBAAoB,UAAWC,E,CAGxC,SAASA,EAAgBC,GACR,WAAXA,EAAEC,OACJP,EAAUG,QAEVP,EAAKE,SAASM,oBAAoB,QAASF,GAC3C/B,OAAOiC,oBAAoB,UAAWC,G,CA/B1CT,EAAKC,QAAQzB,iBAAiB,SAK9B,SAAqBkC,GAGnB,GAFAA,EAAEE,iBAEwB,QAAtBF,EAAEG,OAAOC,SAAoB,OAEjC,IAAMC,GAyBaC,EAzBgBN,EAAEG,OAAO/B,IA2BL,UAArCkB,EAAKG,gBAAgBc,YACjBlB,EAAAmB,KAAkB,eAClBnB,EAAAmB,KAAkB,kBACRC,MAAK,SAAAC,G,OAAQA,EAAKtC,KAAOuC,OAAOL,E,KALlD,IAAqBA,EAvBnBZ,EAAUkB,eAAeP,GACzBX,EAAUmB,OAEVvB,EAAKE,SAAS1B,iBAAiB,QAAS8B,GACxC/B,OAAOC,iBAAiB,UAAWiC,E,IAfrCT,EAAKE,SAAS1B,iBAAiB,QAAS8B,GACxC/B,OAAOC,iBAAiB,UAAWiC,GACnCnD,SAASkB,iBAAiB,SAwC1B,SAAwBkC,IAGjBA,EAAEG,OAAOW,QAAQ,WAAad,EAAEG,OAAOW,QAAQ,cAClDlB,G","sources":["src/library.js","src/js/queue.js","src/js/watched.js","src/js/open-modal-library.js"],"sourcesContent":["import './js/modal-team';\nimport './js/btn-scroll';\nimport './js/watched';\nimport './js/queue';\nimport './js/local-storage-set';\n\nimport './js/open-modal-library';\n","import {\n  emptyRefs,\n  btnWatchedRefs,\n} from './watched';\n\nimport { renderWatchedFilmCards } from './watched';\n\n\nexport const btnQueuedRefs = document.querySelector(\n  'button[data-action=\"queue\"]'\n);\n\n// const QUEUE_KEY = 'QueueMovies';\n\nwindow.addEventListener('load', () => onBtnQueueClick());\n\nbtnQueuedRefs.addEventListener('click', onBtnQueueClick);\n\nfunction onBtnQueueClick() {\n  btnQueuedRefs.classList.add('filter__button--active');\n  btnWatchedRefs.classList.remove('filter__button--active');\n  try {\n    let queueFilms = localStorage.getItem('QueueMovies');\n    if (queueFilms) {\n      queueFilms = JSON.parse(queueFilms);\n      renderWatchedFilmCards(queueFilms);\n      emptyRefs.classList.add('is-hidden');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return;\n}\n","import { btnQueuedRefs } from './queue.js';\nimport { getGenre } from './modal-film.js';\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/';\nexport const SMALL_SIZE = 'w500';\n// const WATCHED_KEY = 'WatchedMovies';\n\n\nexport const btnWatchedRefs = document.querySelector(\n  'button[data-action=\"watched\"]'\n);\nexport const emptyRefs = document.querySelector('[data-action=\"empty\"]');\nexport const galleryLibrary = document.querySelector(\n  '[data-action=\"list-library\"]'\n);\n\nbtnWatchedRefs.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnWatchedClick() {\n  btnQueuedRefs.classList.remove('filter__button--active');\n  btnWatchedRefs.classList.add('filter__button--active');\n  try {\n    let watchedFilms = localStorage.getItem('WatchedMovies');\n    if (watchedFilms) {\n      watchedFilms = JSON.parse(watchedFilms);\n      renderWatchedFilmCards(watchedFilms);\n\n      emptyRefs.classList.add('is-hidden');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return;\n}\n\n\nexport function renderWatchedFilmCards(data) {\n  const markup = data\n    .map(({ id, poster_path, genre_ids, title, release_date }) => {\n      let genresStr = getGenre(genre_ids);\n      let year = release_date.substring(0, 4);\n      if (genresStr && year) genresStr += ' | ';\n      if (!title) title = 'no information';\n\n      let smallImg = !!poster_path\n        ? IMG_PATH + SMALL_SIZE + poster_path\n        : NO_IMAGE;\n      return `\n      <li class=\"film-card\">\n         \t<a href=\"#\" class=\"film-card__link\">\n            <img\n              class=\"film-card__film-img\"\n              src=\"${smallImg}\"\n              alt=\"${title}\"\n              id=\"${id}\"\n            />\n            <h3 class=\"film-card__film-name\">${title}</h3>\n            <p class=\"film-card__genre\">${genresStr}${year}</p>\n          </a>\n        </li>\n\t\t`;\n    })\n    .join('');\n\n  galleryLibrary.innerHTML = markup;\n}\n","import * as storageLocal from './local-storage.js';\nimport ModalFilm from './modal-film.js';\n\nconst refs = {\n  gallery: document.querySelector('.js-gallery'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  activLibraryBtn: document.querySelector(\n    '.filter__item>.filter__button--active'\n  ),\n};\n// console.log(refs.activLibraryBtn.textContent);\nconst modalFilm = new ModalFilm();\n\nrefs.gallery.addEventListener('click', onOpenModal);\nrefs.closeBtn.addEventListener('click', onCloseModal);\nwindow.addEventListener('keydown', onCloseModalEsc);\ndocument.addEventListener('click', onOverlayClose);\n\nfunction onOpenModal(e) {\n  e.preventDefault();\n\n  if (e.target.nodeName !== 'IMG') return;\n\n  const dataCurentFilm = getFilmData(e.target.id);\n\n  modalFilm.modifyDataFilm(dataCurentFilm);\n  modalFilm.open();\n\n  refs.closeBtn.addEventListener('click', onCloseModal);\n  window.addEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModal() {\n  modalFilm.close();\n\n  refs.closeBtn.removeEventListener('click', onCloseModal);\n  window.removeEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModalEsc(e) {\n  if (e.code === 'Escape') {\n    modalFilm.close();\n\n    refs.closeBtn.removeEventListener('click', onCloseModal);\n    window.removeEventListener('keydown', onCloseModalEsc);\n  }\n}\n\nfunction getFilmData(filmId) {\n  const filmList =\n    refs.activLibraryBtn.textContent === 'Queue'\n      ? storageLocal.load('QueueMovies')\n      : storageLocal.load('WatchedMovies');\n  return filmList.find(film => film.id === Number(filmId));\n}\n\nfunction onOverlayClose(e) {\n  // e.preventDefault();\n\n  if (!e.target.closest('.modal') && e.target.closest('.backdrop')) {\n    onCloseModal();\n  }\n}\n"],"names":["parcelRequire","$e45a8be9cfe57eeb$export$2e233108b4c37bf0","document","querySelector","$e45a8be9cfe57eeb$var$onBtnQueueClick","classList","add","$a215baf1061f969f$export$8e7999df18b0696e","remove","queueFilms","localStorage","getItem","$a215baf1061f969f$export$1e847d4efb28c937","JSON","parse","$a215baf1061f969f$export$f345d6e579d6ff19","error","console","log","window","addEventListener","$a215baf1061f969f$export$bcd4d5f228010f5d","data","markup","map","param","id","poster_path","genre_ids","title","release_date","genresStr","$73ES2","getGenre","year","substring","smallImg","$a215baf1061f969f$export$927457973eb16419","NO_IMAGE","concat","join","innerHTML","watchedFilms","$4LMMA","$572566355069554e$var$refs","gallery","closeBtn","activLibraryBtn","$572566355069554e$var$modalFilm","default","$572566355069554e$var$onCloseModal","close","removeEventListener","$572566355069554e$var$onCloseModalEsc","e","code","preventDefault","target","nodeName","dataCurentFilm","filmId","textContent","load","find","film","Number","modifyDataFilm","open","closest"],"version":3,"file":"library.8614041e.js.map"}