{"mappings":"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","sources":["src/library.js","src/js/queue.js","src/js/watched.js","src/js/open-modal-library.js"],"sourcesContent":["import './js/modal-team';\nimport './js/btn-scroll';\nimport './js/watched';\nimport './js/queue';\nimport './js/local-storage-set';\n\nimport './js/open-modal-library';\n","import {\n  emptyRefs,\n  btnWatchedRefs,\n} from './watched';\n\nimport { renderWatchedFilmCards } from './watched';\n\n\nexport const btnQueuedRefs = document.querySelector(\n  'button[data-action=\"queue\"]'\n);\n\n// const QUEUE_KEY = 'QueueMovies';\n\nwindow.addEventListener('load', () => onBtnQueueClick());\n\nbtnQueuedRefs.addEventListener('click', onBtnQueueClick);\n\nexport function onBtnQueueClick() {\n  btnQueuedRefs.classList.add('filter__button--active');\n  btnWatchedRefs.classList.remove('filter__button--active');\n  try {\n    let queueFilms = localStorage.getItem('QueueMovies');\n    if (queueFilms) {\n      queueFilms = JSON.parse(queueFilms);\n      renderWatchedFilmCards(queueFilms);\n      emptyRefs.classList.add('is-hidden');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return;\n}\n","import { btnQueuedRefs } from './queue.js';\nimport { getGenre } from './modal-film.js';\n\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/';\nexport const SMALL_SIZE = 'w500';\n// const WATCHED_KEY = 'WatchedMovies';\n\n\nexport const btnWatchedRefs = document.querySelector(\n  'button[data-action=\"watched\"]'\n);\nexport const emptyRefs = document.querySelector('[data-action=\"empty\"]');\nexport const galleryLibrary = document.querySelector(\n  '[data-action=\"list-library\"]'\n);\n\nbtnWatchedRefs.addEventListener('click', onBtnWatchedClick);\n\nexport function onBtnWatchedClick() {\n  btnQueuedRefs.classList.remove('filter__button--active');\n  btnWatchedRefs.classList.add('filter__button--active');\n  try {\n    let watchedFilms = localStorage.getItem('WatchedMovies');\n    if (watchedFilms) {\n      watchedFilms = JSON.parse(watchedFilms);\n      renderWatchedFilmCards(watchedFilms);\n\n      emptyRefs.classList.add('is-hidden');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return;\n}\n\n\nexport function renderWatchedFilmCards(data) {\n  const markup = data\n    .map(({ id, poster_path, genre_ids, title, release_date }) => {\n      let genresStr = getGenre(genre_ids);\n      let year = release_date.substring(0, 4);\n      if (genresStr && year) genresStr += ' | ';\n      if (!title) title = 'no information';\n\n      let smallImg = !!poster_path\n        ? IMG_PATH + SMALL_SIZE + poster_path\n        : NO_IMAGE;\n      return `\n      <li class=\"film-card\">\n         \t<a href=\"#\" class=\"film-card__link\">\n            <img\n              class=\"film-card__film-img\"\n              src=\"${smallImg}\"\n              alt=\"${title}\"\n              id=\"${id}\"\n            />\n            <h3 class=\"film-card__film-name\">${title}</h3>\n            <p class=\"film-card__genre\">${genresStr}${year}</p>\n          </a>\n        </li>\n\t\t`;\n    })\n    .join('');\n\n  galleryLibrary.innerHTML = markup;\n}\n","import * as storageLocal from './local-storage.js';\nimport ModalFilm from './modal-film.js';\nimport { sendWatchedToStorage, sendQueueToStorage} from \"./local-storage-set\";\nimport {onBtnQueueClick} from './queue.js';\nimport {onBtnWatchedClick} from './watched.js';\nconst refs = {\n  gallery: document.querySelector('.js-gallery'),\n  closeBtn: document.querySelector('[data-modal-close]'),\n  btnWatched: document.querySelector(\".btn_watched\"),\n  btnQueue: document.querySelector(\".btn_queue\"),\n  activLibraryBtn: document.querySelector(\n    '.filter__item>.filter__button--active'\n  ),\n};\n// console.log(refs.activLibraryBtn.textContent);\nconst modalFilm = new ModalFilm();\n\nrefs.gallery.addEventListener('click', onOpenModal);\nrefs.closeBtn.addEventListener('click', onCloseModal);\nwindow.addEventListener('keydown', onCloseModalEsc);\ndocument.addEventListener('click', onOverlayClose);\n\nfunction onOpenModal(e) {\n  e.preventDefault();\n\n  if (e.target.nodeName !== 'IMG') return;\n\n  const dataCurentFilm = getFilmData(e.target.id);\n\n  modalFilm.modifyDataFilm(dataCurentFilm);\n  modalFilm.open();\n\n///// for local-storage and button /////////\nrefs.btnWatched.addEventListener(\"click\", onWatchedBtnClick)\nrefs.btnQueue.addEventListener(\"click\", onQueueBtnClick)\n\nlocalStorage.setItem(\"CurrentFilm\", JSON.stringify(dataCurentFilm))\n\ncheckWatchedStorage(dataCurentFilm)\nif (refs.btnWatched.classList.contains(\"watched_remove\")) {\n  refs.btnWatched.textContent = 'REMOVE FROM WATCHED'} \nelse if(refs.btnWatched.classList.contains(\"watched_send\")){\n  refs.btnWatched.textContent = 'ADD TO WATCHED'\n}\n\ncheckQueueStorage(dataCurentFilm)\nif (refs.btnQueue.classList.contains(\"queue_remove\")) {\n    refs.btnQueue.textContent = 'REMOVE FROM QUEUE'}\nelse if (refs.btnWatched.classList.contains(\"queue_send\")){\n  refs.btnQueue.textContent = 'ADD TO QUEUE'\n}\n  \nfunction onWatchedBtnClick() {\n  if (refs.btnWatched.classList.contains(\"watched_send\")) {\n    refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n    refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n\n    sendWatchedToStorage()\n\n  } else if (refs.btnWatched.classList.contains(\"watched_remove\")) {\n    refs.btnWatched.textContent = 'ADD TO WATCHED'  \n    refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n\n    removeWatchedFilm(dataCurentFilm)\n  }\n    \n  refs.btnWatched.textContent = 'ADD TO WATCHED' \n  refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")  \n}\n\nfunction removeWatchedFilm(currentFilm) {\n    try {\n      const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n      const getWatchedArray = JSON.parse(getWatchedFromStorage)\n\n      const watchedFilmIndex = getWatchedArray.findIndex(value => value.id === currentFilm.id);\n      getWatchedArray.splice(watchedFilmIndex, 1)\n      localStorage.setItem(\"WatchedMovies\", JSON.stringify(getWatchedArray))\n    } catch (error) {\n    // console.error('Get state error: ', error.message);\n  }\n}\n\nfunction onQueueBtnClick() {\n  if (refs.btnQueue.classList.contains(\"queue_send\")) {\n    refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n    refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n\n    sendQueueToStorage()\n  } else if (refs.btnQueue.classList.contains(\"queue_remove\")) {\n    refs.btnQueue.textContent = 'ADD TO QUEUE'  \n    refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n\n    removeQueueFilm(dataCurentFilm)\n  }\n\n  refs.btnQueue.textContent = 'ADD TO QUEUE'  \n  refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n}\n\nfunction removeQueueFilm(currentFilm) {\n    try {\n      const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n      const getQueueArray = JSON.parse(getQueueFromStorage)\n\n      const queueFilmIndex = getQueueArray.findIndex(value => value.id === currentFilm.id);\n      getQueueArray.splice(queueFilmIndex, 1)\n      localStorage.setItem(\"QueueMovies\", JSON.stringify(getQueueArray))\n\n  } catch (error) {\n    // console.error('Get state error: ', error.message);\n  }\n}\n///////////////////end of local-storage ///////////\n\n  refs.closeBtn.addEventListener('click', onCloseModal);\n  window.addEventListener('keydown', onCloseModalEsc);\n}\n\nfunction onCloseModal() {\n  modalFilm.close();\n\n  refs.closeBtn.removeEventListener('click', onCloseModal);\n  window.removeEventListener('keydown', onCloseModalEsc);\n  onBtnQueueClick();\n  onBtnWatchedClick();\n    // window.location.reload()\n}\n\nfunction onCloseModalEsc(e) {\n  if (e.code === 'Escape') {\n    modalFilm.close();\n\n    refs.closeBtn.removeEventListener('click', onCloseModal);\n    window.removeEventListener('keydown', onCloseModalEsc);\n  }\n}\n\nfunction getFilmData(filmId) {\n  const filmList = storageLocal.load('QueueMovies').concat(storageLocal.load('WatchedMovies'));\n  return filmList.find(film => film.id === Number(filmId));\n}\n\nfunction onOverlayClose(e) {\n  // e.preventDefault();\n\n  if (!e.target.closest('.modal') && e.target.closest('.backdrop')) {\n    onCloseModal();\n  }\n}\n///////////// checks for button /////////////////\n\nfunction checkWatchedStorage(currentFilm) {\n  try {\n    const getWatchedFromStorage = localStorage.getItem(\"WatchedMovies\")\n    const getWatchedArray = JSON.parse(getWatchedFromStorage)\n    const checkWatchedStorage = getWatchedArray.find(option => option.id === currentFilm.id);\n        if (checkWatchedStorage) {\n          refs.btnWatched.classList.replace(\"watched_send\", \"watched_remove\")\n          refs.btnWatched.textContent = 'REMOVE FROM WATCHED'\n        } else {\n          refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n          refs.btnWatched.textContent = 'ADD TO WATCHED'\n        }\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n      refs.btnWatched.classList.replace(\"watched_remove\", \"watched_send\")\n    }\n}\n\nfunction checkQueueStorage(currentFilm) {\n  try {\n    const getQueueFromStorage = localStorage.getItem(\"QueueMovies\")\n    const getQueueArray = JSON.parse(getQueueFromStorage)\n    const checkQueueStorage = getQueueArray.find(option => option.id === currentFilm.id);\n        if (checkQueueStorage) {\n          refs.btnQueue.classList.replace(\"queue_send\", \"queue_remove\")\n          refs.btnQueue.textContent = 'REMOVE FROM QUEUE'\n        } else {\n          refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n          refs.btnQueue.textContent = 'ADD TO QUEUE'\n        }\n    } catch (error) {\n      // console.error('Get state error: ', error.message);\n      refs.btnQueue.classList.replace(\"queue_remove\", \"queue_send\")\n    }\n}"],"names":["parcelRequire","$e45a8be9cfe57eeb$export$2e233108b4c37bf0","document","querySelector","$e45a8be9cfe57eeb$export$b055216bf7aaa057","classList","add","$a215baf1061f969f$export$8e7999df18b0696e","remove","queueFilms","localStorage","getItem","$a215baf1061f969f$export$1e847d4efb28c937","JSON","parse","$a215baf1061f969f$export$f345d6e579d6ff19","error","console","log","window","addEventListener","$a215baf1061f969f$export$bcd4d5f228010f5d","$a215baf1061f969f$export$e3cd2a9e9061f2c1","watchedFilms","data","markup","map","param","id","poster_path","genre_ids","title","release_date","genresStr","$73ES2","getGenre","year","substring","smallImg","$a215baf1061f969f$export$927457973eb16419","NO_IMAGE","concat","join","innerHTML","$4LMMA","$572566355069554e$var$refs","gallery","closeBtn","btnWatched","btnQueue","activLibraryBtn","$572566355069554e$var$modalFilm","default","$572566355069554e$var$onCloseModal","close","removeEventListener","$572566355069554e$var$onCloseModalEsc","e","code","preventDefault","target","nodeName","dataCurentFilm","filmId","load","find","film","Number","modifyDataFilm","open","contains","textContent","replace","$iDjs5","sendWatchedToStorage","currentFilm","getWatchedFromStorage","getWatchedArray","watchedFilmIndex","findIndex","value","splice","setItem","stringify","removeWatchedFilm","sendQueueToStorage","getQueueFromStorage","getQueueArray","queueFilmIndex","removeQueueFilm","option","$572566355069554e$var$checkWatchedStorage","$572566355069554e$var$checkQueueStorage","closest"],"version":3,"file":"library.36cdd420.js.map"}